@import '@/app/styles/media';

.toggle-switch {
	--emulatorInlinePadding: calc((var(--toggleSwitchHeight) - var(--emulatorHeight)) / 2);
	--emulatorHeight: calc(var(--toggleSwitchHeight) * 0.6);

	display: inline-flex;
	border-radius: var(--border-radius-big);

	& input[type='checkbox']:checked + .switch::before {
		transform: translateX(calc(var(--toggleSwitchWidth) / 2 - var(--toggleSwitchHeight) / 2));
		box-shadow: var(--box-shadow);
	}
}

.switch {
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	border-radius: inherit;
	width: var(--toggleSwitchWidth);
	height: var(--toggleSwitchHeight);
	box-shadow: var(--box-shadow-inset);
	transition-duration: var(--transition-duration);
	color: var(--color-dark-alt);
	background-color: var(--color-light-alt);

	@include hover {
		background-color: var(--color-light);
	}

	&::before {
		content: '';
		transform: translateX(calc((var(--toggleSwitchWidth) / 2 - var(--toggleSwitchHeight) / 2) * -1));
		height: var(--emulatorHeight);
		aspect-ratio: 1;
		box-shadow: var(--box-shadow-inset);
		border-radius: 50%;
		background-color: var(--color-light-alt);
		transition:
			all var(--transition-duration),
			background-color var(--transition-duration-middle);
	}
}

// THEMES
.toggle-switch {
	&.primary {
		& input[type='checkbox']:checked + .switch::before {
			color: var(--color-blue);
			background-color: currentColor;
		}
		& input[type='checkbox']:checked + .switch {
			color: var(--color-blue);
		}	
	}

	&.secondary {
		& input[type='checkbox']:checked + .switch::before {
			color: var(--color-light);
			background-color: var(--color-light-alt);
		}
		& input[type='checkbox']:checked + .switch {
			color: var(--color-light);
			background-color: var(--color-blue);

			@include hover {
				opacity: 0.8;
			}
		}
	}

	&.toggle-switch-small {
		--toggleSwitchHeight: 25px;
		--toggleSwitchWidth: 50px;
	}

	&.toggle-switch-large {
		--toggleSwitchHeight: 35px;
		--toggleSwitchWidth: 70px;
	}

	&.active-emulator-scale-small {
		--emulatorHeight: calc(var(--toggleSwitchHeight) * 0.4);

		& input[type='checkbox']:checked + .switch::before {
			transform: translateX(calc(var(--toggleSwitchWidth) / 2 - var(--toggleSwitchHeight) / 2)) scale((1.4));
		}
	}

	&.active-emulator-scale-large {
		--emulatorHeight: calc(var(--toggleSwitchHeight) * 0.4);

		& input[type='checkbox']:checked + .switch::before {
			transform: translateX(calc(var(--toggleSwitchWidth) / 2 - var(--toggleSwitchHeight) / 2)) scale((1.7));
		}
	}
}
